# Generated by Django 2.2.4 on 2019-08-21 17:35

import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Entidade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='nome da entidade')),
                ('abreviation', models.CharField(max_length=5, verbose_name='abreviação da entidade')),
                ('database', models.CharField(choices=[('PG', 'PostgreSQL Opengeo'), ('ORA', 'Oracle ExaData'), ('BDA', 'Oracle BDA')], default='PG', max_length=3, verbose_name='banco de dados')),
                ('schema', models.CharField(max_length=100, verbose_name='esquema')),
                ('table', models.CharField(max_length=100, verbose_name='tabela')),
                ('id_column', models.CharField(max_length=200, verbose_name='coluna de ID da entidade')),
                ('name_column', models.CharField(max_length=200, verbose_name='coluna de nome da entidade')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Icone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='título do ícone')),
                ('file_path', models.FileField(upload_to='icones', verbose_name='arquivo do ícone')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'ícone',
            },
        ),
        migrations.CreateModel(
            name='TemaDado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='tema do dado')),
                ('color', colorfield.fields.ColorField(default='#FFFFFF', max_length=18, verbose_name='cor das caixinhas')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'tema de dados',
                'verbose_name_plural': 'temas de dados',
            },
        ),
        migrations.CreateModel(
            name='TipoDado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='tipo de dado')),
                ('serialization', models.CharField(choices=[('Singleton', 'Serialização para dado único'), ('List', 'Serialização para lista de dados'), ('Graph', 'Serialização para gráfico cartesiano'), ('Pizza', 'Serialização para gráfico de pizza')], default='Singleton', max_length=20, verbose_name='forma de serialização')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'tipo de dados',
                'verbose_name_plural': 'tipos de dados',
            },
        ),
        migrations.CreateModel(
            name='Mapa',
            fields=[
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='map_info', serialize=False, to='lupa.Entidade')),
                ('database', models.CharField(choices=[('PG', 'PostgreSQL Opengeo'), ('ORA', 'Oracle ExaData'), ('BDA', 'Oracle BDA')], default='PG', max_length=3, verbose_name='banco de dados')),
                ('schema', models.CharField(max_length=50, verbose_name='esquema')),
                ('table', models.CharField(max_length=50, verbose_name='tabela')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('title', models.CharField(max_length=100, verbose_name='titulo da caixinha')),
                ('exibition_field', models.CharField(blank=True, help_text='Não obrigatório', max_length=100, null=True, verbose_name='nome de exibição da caixinha')),
                ('database', models.CharField(choices=[('PG', 'PostgreSQL Opengeo'), ('ORA', 'Oracle ExaData'), ('BDA', 'Oracle BDA')], default='PG', max_length=3, verbose_name='banco de dados')),
                ('schema', models.CharField(max_length=100, verbose_name='esquema')),
                ('table', models.CharField(max_length=100, verbose_name='tabela')),
                ('limit_fetch', models.IntegerField(default=0, help_text='0 = sem limite', verbose_name='máximo de dados a serem mostrados')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('data_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='data_by_type', to='lupa.TipoDado', verbose_name='tipo da caixinha')),
                ('entity_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_list', to='lupa.Entidade', verbose_name='entidade relacionada')),
                ('icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lupa.Icone', verbose_name='ícone')),
                ('theme', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='data_by_theme', to='lupa.TemaDado', verbose_name='tema da caixinha')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ColunaDado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='nome da coluna na tabela')),
                ('info_type', models.CharField(default='id', max_length=50, verbose_name='tipo de informação da coluna')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('dado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='column_list', to='lupa.Dado', verbose_name='dado')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ColunaMapa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='nome da coluna na tabela')),
                ('info_type', models.CharField(default='id', max_length=50, verbose_name='tipo de informação da coluna')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('mapa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='column_list', to='lupa.Mapa', verbose_name='mapa')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
